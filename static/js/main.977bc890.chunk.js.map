{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageAmount","Math","ceil","pages","equalFirst","equalLast","className","classNames","disabled","type","onClick","map","page","active","items","itemsPerPage","App","useSearchParams","search","setSearch","Number","get","includes","sort","a","b","length","start","end","min","visibleItems","slice","id","value","onChange","event","target","item","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"iNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GAEtBI,EAA6B,IAAhBN,EACbO,EAAYP,IAAgBE,EAElC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAAUJ,IADZ,SAIE,wBACEK,KAAK,SACL,UAAQ,WACRH,UAAU,YACV,gBAA+B,IAAhBR,EACfY,QAAS,WACFN,GACHL,EAAaD,EAAc,IAPjC,oBAeDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASd,IAFrB,SAME,wBACEW,KAAK,SACL,UAAQ,WACRH,UAAU,YACVI,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUH,IADZ,SAIE,wBACEI,KAAK,SACL,UAAQ,WACRH,UAAU,YACV,gBAAeR,IAAgBE,EAC/BU,QAAS,WACFL,GACHN,EAAaD,EAAc,IAPjC,wBC5DFgB,EAAQzB,EAAW,EAAG,IAAIsB,KAAI,SAAAlB,GAAC,qBAAYA,MAC3CsB,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAA4BC,cAA5B,mBAAOC,EAAP,KAAeC,EAAf,KAEMrB,EAAcsB,OAAOF,EAAOG,IAAI,UAAY,EAC5CxB,EAAUuB,OAAOF,EAAOG,IAAI,aAAe,EAE5CN,EAAaO,SAASzB,KACzBkB,EAAarB,KAAKG,GAClBkB,EAAaQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAGlC,IAAM7B,EAAQkB,EAAMY,OACdC,GAAS7B,EAAc,GAAKD,EAC5B+B,EAAM3B,KAAK4B,IAAI/B,EAAcD,EAASD,GACtCkC,EAAehB,EAAMiB,MAAMJ,EAAOC,GAYxC,OACE,mCACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC6B,EAAQ,EADzC,cACgDC,EADhD,eAC0DhC,EAD1D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOpC,EACPqC,SA1BgB,SAACC,GAC3BhB,EAAU,CAAEP,KAAM,IAAKf,QAASsC,EAAMC,OAAOH,SAoBrC,SAOGlB,EAAaJ,KAAI,SAAA0B,GAAI,OACpB,wBAAQJ,MAAOI,EAAf,SAAiCA,GAAPA,UAKhC,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAvCiB,SAACa,GACpBA,IAASd,GACXqB,EAAU,CAAEP,KAAK,GAAD,OAAKA,GAAQf,QAAQ,GAAD,OAAKA,QAwCvC,6BACGiC,EAAanB,KAAI,SAAA0B,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCpEpCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.977bc890.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange:(page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageAmount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageAmount);\n\n  const equalFirst = currentPage === 1;\n  const equalLast = currentPage === pageAmount;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: equalFirst,\n      })}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (!equalFirst) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </button>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </button>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: equalLast,\n      })}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === pageAmount}\n          onClick={() => {\n            if (!equalLast) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst itemsPerPage = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [search, setSearch] = useSearchParams();\n\n  const currentPage = Number(search.get('page')) || 1;\n  const perPage = Number(search.get('perPage')) || 5;\n\n  if (!itemsPerPage.includes(perPage)) {\n    itemsPerPage.push(perPage);\n    itemsPerPage.sort((a, b) => a - b);\n  }\n\n  const total = items.length;\n  const start = (currentPage - 1) * perPage;\n  const end = Math.min(currentPage * perPage, total);\n  const visibleItems = items.slice(start, end);\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSearch({ page: '1', perPage: event.target.value });\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      setSearch({ page: `${page}`, perPage: `${perPage}` });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${currentPage} (items ${start + 1} - ${end} of ${total})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={perPage}\n              onChange={handleChangePerPage}\n            >\n              {itemsPerPage.map(item => (\n                <option value={item} key={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n\n        <Pagination\n          total={total}\n          perPage={perPage}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n\n        <ul>\n          {visibleItems.map(item => (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}